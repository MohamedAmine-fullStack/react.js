<!-- views/admin/products.ejs -->
<main class="container mt-5">
    <h1>Manage Products</h1>
    <!-- Button to show the add product form -->
    <button class="btn btn-primary" id="showAddProductFormBtn">Add New Product</button>
  
    <!-- Table to display products -->
    <table class="table">
      <thead>
        <tr>
          <th>Name</th>
          <th>Price</th>
          <th>Description</th>
          <th>Image</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% products.forEach(product => { %>
          <tr id="product-<%= product._id %>">
            <td><%= product.name %></td>
            <td>$<%= product.price %></td>
            <td><%= product.description %></td>
            <td><img src="<%= product.image %>" alt="Product Image" style="width: 100px;"></td>
            <td>
              <button class="btn btn-warning btn-sm edit-btn" data-id="<%= product._id %>">Edit</button>
              <a href="/admin/products/delete/<%= product._id %>" class="btn btn-danger btn-sm">Delete</a>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  
    <!-- Form for adding a new product (initially hidden) -->
    <div id="addProductFormContainer" style="display: none;">
        <h2>Add New Product</h2>
        <form id="addProductForm" method="POST" action="/admin/products/add" enctype="multipart/form-data">
            <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input type="text" class="form-control" id="name" name="name" required>
          </div>
          <div class="mb-3">
            <label for="price" class="form-label">Price</label>
            <input type="number" class="form-control" id="price" name="price" required>
          </div>
          <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
          </div>
          <div class="mb-3">
            <label for="image" class="form-label">Image</label>
            <input type="file" class="form-control" id="image" name="image" accept="image/*">
          </div>
          <button type="submit" class="btn btn-primary">Add Product</button>
          <button type="button" class="btn btn-secondary" id="cancelAddBtn">Cancel</button>
        </form>
      </div>
  
    <!-- Form for editing a product -->
    <div id="editProductFormContainer" style="display: none;">
        <h2>Edit Product</h2>
        <form id="editProductForm" method="POST" enctype="multipart/form-data">
          <input type="hidden" id="editProductId" name="id">
          <div class="mb-3">
            <label for="editName" class="form-label">Name</label>
            <input type="text" class="form-control" id="editName" name="name" required>
          </div>
          <div class="mb-3">
            <label for="editPrice" class="form-label">Price</label>
            <input type="number" class="form-control" id="editPrice" name="price" required>
          </div>
          <div class="mb-3">
            <label for="editDescription" class="form-label">Description</label>
            <textarea class="form-control" id="editDescription" name="description" rows="3" required></textarea>
          </div>
          <div class="mb-3">
            <label for="editImage" class="form-label">Image (optional)</label>
            <input type="file" class="form-control" id="editImage" name="image" accept="image/*">
          </div>
          <button type="submit" class="btn btn-primary">Save Changes</button>
          <button type="button" class="btn btn-secondary" id="cancelEditBtn">Cancel</button>
        </form>
      </div>
  
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const addProductFormContainer = document.getElementById('addProductFormContainer');
        const showAddProductFormBtn = document.getElementById('showAddProductFormBtn');
        const editProductFormContainer = document.getElementById('editProductFormContainer');
        const cancelAddBtn = document.getElementById('cancelAddBtn');
        const cancelEditBtn = document.getElementById('cancelEditBtn');
        const editProductForm = document.getElementById('editProductForm');
  
        // Show Add Product Form
        showAddProductFormBtn.addEventListener('click', () => {
          addProductFormContainer.style.display = 'block';
          editProductFormContainer.style.display = 'none'; // Hide edit form when adding a new product
        });
  
        // Hide Add Product Form
        if (cancelAddBtn) {
          cancelAddBtn.addEventListener('click', () => {
            addProductFormContainer.style.display = 'none';
          });
        }
  
        // Handle Add Product Form Submission
        document.getElementById('addProductForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);

            try {
                const response = await fetch('/admin/products/add', {
                method: 'POST',
                body: formData // Use FormData to include file and text data
                });

                if (response.ok) {
                window.location.reload(); // Reload the page to update the table
                } else {
                const error = await response.json();
                console.error('Error adding product:', error.error);
                }
            } catch (error) {
                console.error('Error:', error);
            }
            });
  
        // Handle Edit Button Click
        document.querySelectorAll('.edit-btn').forEach(button => {
          button.addEventListener('click', async () => {
            const productId = button.getAttribute('data-id');
            try {
              const response = await fetch(`/admin/products/${productId}`);
              const product = await response.json();
              if (product) {
                document.getElementById('editProductId').value = product._id;
                document.getElementById('editName').value = product.name;
                document.getElementById('editPrice').value = product.price;
                document.getElementById('editDescription').value = product.description;
                addProductFormContainer.style.display = 'none'; // Hide add form when editing
                editProductFormContainer.style.display = 'block';
              }
            } catch (error) {
              console.error('Error fetching product:', error);
            }
          });
        });
  
        // Handle Edit Product Form Submission
        editProductForm.addEventListener('submit', async (e) => {
          e.preventDefault();
          const formData = new FormData(editProductForm);
          const productId = document.getElementById('editProductId').value;
          
          try {
            const response = await fetch(`/admin/products/edit/${productId}`, {
              method: 'POST',
              body: formData,
            });
  
            if (response.ok) {
              window.location.reload(); // Reload the page to update the table
            } else {
              console.error('Error updating product');
            }
          } catch (error) {
            console.error('Error:', error);
          }
        });
  
        // Cancel Edit
        if (cancelEditBtn) {
          cancelEditBtn.addEventListener('click', () => {
            editProductFormContainer.style.display = 'none';
          });
        }
      });
    </script>
  </main>
